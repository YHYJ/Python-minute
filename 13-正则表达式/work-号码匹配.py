#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""练习：写一个正则表达式，能匹配出多种格式的电话号码，包括
(021)88776543
010-55667890
02584453362
0571 66345673
"""
num = '123(021)88776543 010-55667890nn025844533625455466xy0571 66345673汉字'
import re
s = re.findall(r"\(?0\d{2,3}[) -]?\d{7,8}",num)
print(s)

'''分块解析'''
# \(?
'''匹配括号，?表示括号不一定有因为()在正则表达式里也有着特殊的含义，所以要匹配字符"("，需要用 "\(" '''
# 0\d{2,3}
'''匹配区号，0xx或者0xxx'''
# [) -]?
'''匹配 右括号、空格、连接符，?表示不一定有'''
#\d{7,8}
'''7或8位的电话号码'''

##############################################################

"""
但是，这个表达式虽然能匹配出所有正确的数据（一般情况下，这样已经足够），
但理论上也会匹配到错误的数据。因为()应当是成对出现的，
表达式中对于左右两个括号并没有做关联处理，
例如(02188776543这样的数据也是符合条件的
"""
#用【|】连接两个表达式，将特殊情况单独写出来，只要满足其一就匹配成功。|相当于or

num = '1008623(021) 88776543 010-55667890nn025844533625455466xy0571 66345673汉字(02188776621)'
x = re.findall(r"\(0\d{2,3}\)[ ]?\d{7,8}|0\d{2,3}[ -]?\d{7,8}|1\d{4}",num)
print(x)
